# Default values for frontend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# ============================================
# Deployment Configuration
# ============================================

# Number of frontend pod replicas
replicaCount: 1

# Docker image configuration
image:
  repository: frontend-app  # Change this to your registry/image-name
  pullPolicy: IfNotPresent  # Use local image if available (good for minikube/kind)
  tag: "latest"             # Image tag (can override with --set image.tag=v1.2.3)

# Secrets for pulling images from private registries
imagePullSecrets: []

# Override chart name
nameOverride: ""
fullnameOverride: ""

# ============================================
# Service Account Configuration
# ============================================

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# ============================================
# Pod Configuration
# ============================================

# Annotations to add to the pod
podAnnotations: {}

# Labels to add to the pod
podLabels: {}

# Security context for the pod
podSecurityContext: {}
  # fsGroup: 2000

# Security context for the container
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# ============================================
# Service Configuration
# ============================================

service:
  type: ClusterIP  # Internal service (ClusterIP, NodePort, or LoadBalancer)
  port: 3000       # Next.js default port

# ============================================
# Ingress Configuration
# ============================================

ingress:
  enabled: false  # Set to true to expose frontend externally
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# ============================================
# Gateway API HTTPRoute
# ============================================

httpRoute:
  enabled: false
  annotations: {}
  parentRefs:
  - name: gateway
    sectionName: http
  hostnames:
  - chart-example.local
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /

# ============================================
# Resource Limits
# ============================================

resources:
  # Resource limits (max resources pod can use)
  limits:
    cpu: 500m      # 0.5 CPU cores
    memory: 512Mi  # 512 megabytes RAM
  # Resource requests (guaranteed resources)
  requests:
    cpu: 100m      # 0.1 CPU cores
    memory: 128Mi  # 128 megabytes RAM

# ============================================
# Health Checks (Probes)
# ============================================

# Liveness probe - restarts pod if this fails
livenessProbe:
  httpGet:
    path: /              # Next.js home page
    port: http
  initialDelaySeconds: 30  # Wait 30s after container starts
  periodSeconds: 10        # Check every 10 seconds
  timeoutSeconds: 5        # Timeout after 5 seconds
  failureThreshold: 3      # Restart after 3 failures

# Readiness probe - removes pod from service if this fails
readinessProbe:
  httpGet:
    path: /              # Next.js home page
    port: http
  initialDelaySeconds: 10  # Start checking after 10s
  periodSeconds: 5         # Check every 5 seconds
  timeoutSeconds: 3        # Timeout after 3 seconds
  failureThreshold: 3      # Mark not ready after 3 failures

# ============================================
# Autoscaling Configuration
# ============================================

autoscaling:
  enabled: false              # Set to true to enable HPA
  minReplicas: 1             # Minimum number of pods
  maxReplicas: 100           # Maximum number of pods
  targetCPUUtilizationPercentage: 80  # Scale when CPU > 80%
  # targetMemoryUtilizationPercentage: 80

# ============================================
# Additional Volumes
# ============================================

# Additional volumes on the output Deployment definition
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# ============================================
# Node Selection
# ============================================

# Node selector for pod assignment
nodeSelector: {}

# Tolerations for pod assignment
tolerations: []

# Affinity rules for pod assignment
affinity: {}

# ============================================
# Frontend Application Configuration
# ============================================

# Environment variables for the Next.js application
env:
  NODE_ENV: "production"

# Backend connection configuration
backend:
  # Name of the backend Helm release
  # This will construct the backend URL: http://<releaseName>:<port>
  releaseName: "my-backend"
  port: 8000
  
  # Alternative: Set a custom backend URL
  # If customUrl is set, it will be used instead of releaseName
  # customUrl: "http://custom-backend.prod.svc.cluster.local:8000"
  # customUrl: "https://api.example.com"

